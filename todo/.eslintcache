[{"C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\App.js":"1","C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\index.js":"3","C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoTemplate.js":"4","C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoHead.js":"5","C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoList.js":"6","C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoItem.js":"7","C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoCreate.js":"8","C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoContext.js":"9"},{"size":674,"mtime":1607435856700,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1606401774899,"results":"12","hashOfConfig":"11"},{"size":500,"mtime":1606401774899,"results":"13","hashOfConfig":"11"},{"size":543,"mtime":1607349935082,"results":"14","hashOfConfig":"11"},{"size":739,"mtime":1606570009599,"results":"15","hashOfConfig":"11"},{"size":792,"mtime":1607435989395,"results":"16","hashOfConfig":"11"},{"size":1561,"mtime":1606621137935,"results":"17","hashOfConfig":"11"},{"size":2483,"mtime":1607435627310,"results":"18","hashOfConfig":"11"},{"size":2032,"mtime":1607435745036,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2gid22",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\App.js",[],"C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\index.js",[],"C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoTemplate.js",[],"C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoHead.js",[],"C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoList.js",["40"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTodoNextId, useTodoState } from \"./TodoContext\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoListBlock = styled.div`\r\n  flex: 1; // 자신이 차지할 수 있는 모든 영역을 차지함\r\n  padding: 20px 32px 48px 32px;\r\n  overflow-y: auto;\r\n  // background: grey;\r\n`;\r\n\r\nfunction TodoList() {\r\n  const state = useTodoState;\r\n  console.log(state);\r\n  return (\r\n    <TodoListBlock>\r\n      <TodoItem text=\"프로젝트 생성하기\" done={false} />\r\n      <TodoItem text=\"프로젝트 생성하기\" done={false} />\r\n      <TodoItem text=\"프로젝트 생성하기\" done={true} />\r\n      <TodoItem text=\"프로젝트 생성하기\" done={true} />\r\n    </TodoListBlock>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoItem.js",[],"C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoCreate.js",["41"],"import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdAdd } from \"react-icons/md\";\r\n\r\nimport { useTodoNextId } from \"./TodoContext\";\r\n\r\nconst CircleButton = styled.button`\r\n  background: #5c7cfa;\r\n  &:hover {\r\n    background: #bac8ff;\r\n  }\r\n  &:active {\r\n    background: #3b5bdb;\r\n  }\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  margin: 0 auto;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  transform: translate(0, 50%); // 정확한 버튼의 위치를 찾도록 함\r\n\r\n  font-size: 60px;\r\n  color: #fff;\r\n  border-radius: 50%;\r\n\r\n  border: none;\r\n  outline: none;\r\n\r\n  transition: 0.125s all ease-in; // 애니메이션 효과\r\n\r\n  ${(props) =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787; // 연한 빨간 색\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(0%, 50%) rotate(45deg); // 기존의 값 + 45도 돌려주기\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  // 특정 폼 위치 정해주기\r\n  width: 100%;\r\n`;\r\n\r\nconst InsertForm = styled.div`\r\n  //  실제 폼\r\n\r\n  background: #f8f9fa;\r\n  padding: 32px;\r\n  padding-bottom: 72px;\r\n  border-bottom-left-radius: 16px; //모서리 삐져나오지 않게 처리\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n  display: flex;\r\n  margin-bottom: -80px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box; // padding이 삐져나오지 않게 함\r\n`;\r\n\r\nfunction TodoCreate() {\r\n  const [open, SetOpen] = useState(false);\r\n  const onToggle = () => SetOpen(!open); // 기존 open의 값을 반전시켜주는 기능\r\n\r\n  // const nextId = useTodoNextId();\r\n  // nextId.current += 1;\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <InsertFormPositioner>\r\n          <InsertForm>\r\n            <Input placeholder=\"할 일을 입력 후, Enter를 누르세요\" autoFocus />\r\n          </InsertForm>\r\n        </InsertFormPositioner>\r\n      )}\r\n      {/* 만약 open 상태라면 InsertForm을 보여주어라 */}\r\n      <CircleButton onClick={onToggle} open={open}>\r\n        {/* open이 있으면 다른 스타일을 보여주도록 설정해야  함 */}\r\n        <MdAdd />\r\n      </CircleButton>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoCreate;\r\n","C:\\Users\\USER\\OneDrive\\바탕 화면\\ex\\todo-list\\todo\\src\\Components\\TodoContext.js",[],{"ruleId":"42","severity":1,"message":"43","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":5,"column":10,"nodeType":"44","messageId":"45","endLine":5,"endColumn":23},"no-unused-vars","'useTodoNextId' is defined but never used.","Identifier","unusedVar"]